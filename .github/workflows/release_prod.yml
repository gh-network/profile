name: Deploy production

on:
  push:
    branches: [ master ]
env:
  SERVICE_NAME: profiles
  GRPC_SERVICE_NAME: grpcprofiles

jobs:
  unit-test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal

  push-image:
    needs: unit-test
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $SERVICE_NAME

      - name: Login into github container regestry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to github container regestry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$SERVICE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag $SERVICE_NAME $IMAGE_ID
          docker push $IMAGE_ID

  push-grpc-image:
    needs: unit-test
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file grpc.Dockerfile --tag $GRPC_SERVICE_NAME

      - name: Login into github container regestry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to github container regestry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$GRPC_SERVICE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag $GRPC_SERVICE_NAME $IMAGE_ID
          docker push $IMAGE_ID

  deploy:
    needs: [push-image, push-grpc-image]
    runs-on: ubuntu-20.04

    steps:
      - uses: boberneprotiv/setup-ssh-key@v1
        id: setup-ssh
        with:
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - uses: boberneprotiv/ssh-remove-run@v1
        with:
          user: ${{ secrets.SSH_REMOTE_USER }}
          host: ${{ secrets.SSH_REMOTE_HOST }}
          private-key-path: ${{ steps.setup-ssh.outputs.private-key-path }}
          run: |
            cd gh
            docker-compose pull
            docker-compose up -d --force-recreate $SERVICE_NAME
